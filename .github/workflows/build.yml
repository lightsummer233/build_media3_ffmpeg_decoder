name: Build media3 FFmpeg decoder

on:
  workflow_dispatch:
    inputs:
      ANDROID_NDK:
        description: "Android NDK"
        required: true
        default: 'r28'
      ANDROID_ABI:
        description: "Android ABI"
        required: true
        default: '21'
      ENABLED_DECODERS:
        description: "Enabled FFmpeg decoder"
        required: true
        default: 'vorbis opus flac alac pcm_mulaw pcm_alaw mp3 amrnb amrwb aac ac3 eac3 dca mlp truehd'
      FFMPEG_BRANCH:
        description: "FFmpeg branch"
        required: true
        default: 'release/7.1'
      MEDIA3_BRANCH:
        description: "media3 branch"
        required: true
        default: 'release'
      FFMPEG_ENABLE_GPL:
        description: "Enable FFmpeg GPL"
        required: true
        default: false
        type: boolean
      FFMPEG_ENABLE_VERSION_3:
        description: "Enable FFmpeg (L)GPL version 3"
        required: true
        default: false
        type: boolean
      FFMEPG_ENABLE_NONFREE:
        description: "Enable FFmpeg nonfree"
        required: true
        default: false
        type: boolean

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android NDK
        run: |
          cd "$GITHUB_WORKSPACE"
          wget -q https://dl.google.com/android/repository/android-ndk-${{ github.event.inputs.ANDROID_NDK }}-linux.zip
          unzip android-ndk-${{ github.event.inputs.ANDROID_NDK }}-linux.zip &>/dev/null
          rm -rf android-ndk-${{ github.event.inputs.ANDROID_NDK }}-linux.zip

      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Clone repositories
        run: |
          cd "$GITHUB_WORKSPACE"
          git clone https://github.com/androidx/media -b ${{ github.event.inputs.MEDIA3_BRANCH }} --depth=1
          cd media/libraries/decoder_ffmpeg
          git clone git://source.ffmpeg.org/ffmpeg -b ${{ github.event.inputs.FFMPEG_BRANCH }} --depth=1

      - name: Build FFmpeg jni
        run: |
          FFMPEG_MODULE_PATH="$GITHUB_WORKSPACE"/media/libraries/decoder_ffmpeg/src/main
          NDK_PATH="$GITHUB_WORKSPACE"/android-ndk-${{ github.event.inputs.ANDROID_NDK }}
          HOST_PLATFORM="linux-x86_64"
          ANDROID_ABI=${{ github.event.inputs.ANDROID_ABI }}
          ENABLED_DECODERS=(${{ github.event.inputs.ENABLED_DECODERS }})
          FFMPEG_PATH="$GITHUB_WORKSPACE/media/libraries/decoder_ffmpeg/ffmpeg"
          cd "${FFMPEG_MODULE_PATH}/jni"
          ln -s "$FFMPEG_PATH" ffmpeg
          cd "${FFMPEG_MODULE_PATH}/jni"
          if [ ${{ github.event.inputs.FFMPEG_ENABLE_GPL }} = true ]; then
            sed -i '/--disable-vulkan/a\    --enable-gpl' build_ffmpeg.sh
          fi
          if [ ${{ github.event.inputs.FFMPEG_ENABLE_VERSION_3 }} = true ]; then
            sed -i '/--disable-vulkan/a\    --enable-version3' build_ffmpeg.sh
          fi
          if [ ${{ github.event.inputs.FFMEPG_ENABLE_NONFREE }} = true ]; then
            sed -i '/--disable-vulkan/a\    --enable-nonfree' build_ffmpeg.sh
          fi
          ./build_ffmpeg.sh "${FFMPEG_MODULE_PATH}" "${NDK_PATH}" "${HOST_PLATFORM}" "${ANDROID_ABI}" "${ENABLED_DECODERS[@]}"

      - name: Build FFmpeg aar
        run: |
          cd "$GITHUB_WORKSPACE"/media
          ./gradlew lib-decoder-ffmpeg:assembleRelease

      - name: Upload FFmpeg jni
        uses: actions/upload-artifact@v4
        with:
          name: FFmpeg-jni
          path: |
            media/libraries/decoder_ffmpeg/ffmpeg/android-libs/*
          compression-level: 9

      - name: Upload FFmpeg aar
        uses: actions/upload-artifact@v4
        with:
          name: FFmpeg-aar
          path: |
            media/libraries/decoder_ffmpeg/buildout/outputs/aar/*
          compression-level: 9
